{"version":3,"sources":["components/PetList.js","views/Main.js","components/ShowPet.js","components/UpdatePet.js","components/PetForm.js","App.js","reportWebVitals.js","index.js"],"names":["PetList","pets","to","map","pet","idx","name","type","_id","Main","useState","setPets","loaded","setLoaded","useEffect","axios","get","then","res","data","removeFromDom","petId","filter","ShowPet","id","setPet","description","skill1","skill2","skill3","onClick","e","delete","navigate","UpdatePet","setName","setType","setDescription","setSkill1","setSkill2","setSkill3","errors","setErrors","err","index","onSubmit","preventDefault","put","catch","errorResponse","response","errorArr","Object","keys","key","push","message","value","onChange","target","PetForm","post","App","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9624c55.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from '@reach/router';\r\nimport '../App.css'\r\n\r\n\r\nconst PetList = ({pets }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Link to={'/new'}>Add a Pet to Adopt!</Link>\r\n            <h3>These pets are looking for a good home:</h3>\r\n            <table>\r\n                <thead>\r\n                    <th>Name</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </thead>\r\n                <tbody>\r\n                    {pets.map((pet, idx)=>{\r\n                        return  <tr>\r\n\r\n                                    <td key={idx}>{pet.name}</td>\r\n                                    <td key={idx}>{pet.type}</td>\r\n                                    <td>\r\n                                        <button><Link to={\"/pets/\" + pet._id + \"/edit\"}>Edit</Link></button>\r\n                                        <button><Link to={\"/pets/\" + pet._id}>Details</Link></button>\r\n                                    </td>\r\n                                </tr>\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetList;","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport PetList from '../components/PetList';\r\nimport '../App.css';\r\n\r\nconst Main = () => {\r\n    const [pets, setPets] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pets')\r\n            .then(res => {\r\n                setPets(res.data);\r\n                setLoaded(true);\r\n            });\r\n    }, [])\r\n\r\n    const removeFromDom = petId => {\r\n        setPets(pets.filter(pet => pet._id !== petId));\r\n    }\r\n    return (\r\n        <div>\r\n            {loaded && <PetList pets={pets} removeFromDom={removeFromDom} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\n\r\nconst ShowPet = ({id}) => {\r\n\r\n    const [pet, setPet] = useState({})\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets/\" + id)\r\n            .then(res => setPet(res.data))\r\n    }, [id])\r\n\r\n    const adoptPet = (petId) => {\r\n        axios.delete('http://localhost:8000/api/pets/' + petId)\r\n            .then(res => {\r\n                removeFromDom(petId)\r\n            })\r\n            navigate('/')\r\n    }\r\n\r\n    const removeFromDom = petId => {\r\n        setPet(pet => pet._id !== petId);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Details about {pet.name}</h3>\r\n            <div>\r\n                <p>Pet Type: {pet.type}</p>\r\n                <p>Pet Description: {pet.description}</p>\r\n                <h4>Skills:</h4>\r\n                {pet.skill1 ?\r\n                    <ul>\r\n                        <li>{pet.skill1}</li>\r\n                        <li>{pet.skill2}</li>\r\n                        <li>{pet.skill3}</li>\r\n                    </ul>:\r\n                    <p>No Skills added for this animal!</p>}\r\n            </div>\r\n            <button onClick={(e)=>{adoptPet(pet._id)}}>Adopt!</button>\r\n            <button><Link to={\"/\"}>Home</Link></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowPet;","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst UpdatePet = ({id}) => {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [skill1, setSkill1] = useState('');\r\n    const [skill2, setSkill2] = useState('');\r\n    const [skill3, setSkill3] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pets/' + id)\r\n            .then(res => {\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n                \r\n            })\r\n    }, [id])\r\n    \r\n    const updatePet = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/pets/' + id, { name, type, description, skill1, skill2, skill3 })\r\n            .then(res => {navigate('/')})\r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr);\r\n                navigate(`/pets/${id}/edit`);\r\n            })\r\n\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Update Pet</h1>\r\n            {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n            <form onSubmit={updatePet}>\r\n                <p>\r\n                    <label>Name: </label><br />\r\n                    <input type=\"text\" name=\"name\" value={name} \r\n                    onChange={(e) => { setName(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Type of animal: </label><br />\r\n                    <input type=\"text\" name=\"name\" value={type} \r\n                    onChange={(e) => { setType(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Description of animal: </label><br />\r\n                    <input type=\"text\" name=\"name\" value={description} \r\n                    onChange={(e) => { setDescription(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Skill One: </label><br />\r\n                    <input type=\"text\" name=\"skill1\" value={skill1} \r\n                    onChange={(e) => { setSkill1(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Skill Two: </label><br />\r\n                    <input type=\"text\" name=\"skill2\" value={skill2} \r\n                    onChange={(e) => { setSkill2(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Skill Three: </label><br />\r\n                    <input type=\"text\" name=\"skill3\" value={skill3} \r\n                    onChange={(e) => { setSkill3(e.target.value) }} />\r\n                </p>\r\n                <input type=\"submit\" />\r\n            </form>\r\n            <button><Link to={\"/\"}>Home</Link></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePet;","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst PetForm = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const addPet = e => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8000/api/pets', { name, type, description, skill1, skill2, skill3 })\r\n            .then(res => navigate('/'))\r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr);\r\n                navigate('/new')\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to={\"/\"}>Home</Link>\r\n            <h3>Add a new Pet to Adopt:</h3>\r\n            <form onSubmit={addPet}>\r\n                {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n                <p>\r\n                    <label>Name: </label><br />\r\n                    <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\r\n                </p>\r\n                <p>\r\n                    <label>Type of Animal: </label><br />\r\n                    <input type=\"text\" onChange={(e) => setType(e.target.value)} value={type} />\r\n                </p>\r\n                <p>\r\n                    <label>Description of Animal: </label><br />\r\n                    <input type=\"text\" onChange={(e) => setDescription(e.target.value)} value={description} />\r\n                </p>\r\n                <h3>Skills: (optional)</h3>\r\n                <p>\r\n                    <label>Skill one: </label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill1(e.target.value)} value={skill1} />\r\n                </p>\r\n                <p>\r\n                    <label>Skill Two: </label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill2(e.target.value)} value={skill2} />\r\n                </p>\r\n                <p>\r\n                    <label>Skill Three: </label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill3(e.target.value)} value={skill3} />\r\n                </p>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetForm;","import React from 'react';\nimport { Router } from '@reach/router';\nimport Main from './views/Main';\nimport ShowPet from './components/ShowPet';\nimport UpdatePet from './components/UpdatePet';\nimport PetForm from './components/PetForm';\nimport './App.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <hr></hr>\n      <Router>\n        <Main path=\"/\"/>\n        <PetForm path=\"/new\"/>\n        <ShowPet path=\"/pets/:id\" />\n        <UpdatePet path=\"pets/:id/edit\"/>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}